%bind alloc       0
%bind free        1
%bind print_f64   2
%bind print_i64   3
%bind print_ptr   5
%bind dump_memory 6
%bind write       7

;; TODO(#127): a better way of allocating memory for standard printing functions
%bind print_memory "******************************"

;; addr_a
;; addr_b
swap8:
    swap 2
    dup 1
    dup 1

    read8
    swap 1
    read8

    dup 2
    swap 1
    write8

    dup 2
    swap 1
    write8

    drop
    drop

    ret

reverse:
    swap 2
    swap 1
    dup 0
    push 2
    divi

    reverse_loop:
        dup 0
        push 0
        eqi
        jmp_if reverse_loop_end

        dup 2
        dup 2
        push 1
        minusi
        dup 1
        plusi
        call swap8

        push 1
        minusi

        swap 1
           push 2
           minusi
        swap 1

        swap 2
           push 1
           plusi
        swap 2

        jmp reverse_loop
    reverse_loop_end:

    drop
    drop
    drop

    ret

dump_u64:
    swap 1

    push print_memory

    dump_u64_loop:
        dup 1
        push 10
        modi
        push '0'
        plusi

        dup 1
        swap 1
        write8

        push 1
        plusi

        swap 1
        push 10
        divi
        swap 1

        dup 1
        push 0
        eqi
        not
    jmp_if dump_u64_loop

dump_u64_after_loop:
    push print_memory
    minusi
    push print_memory
    swap 1

    dup 1
    dup 1
    call reverse

    native write

    drop

    push 0
    push 10
    write8

    push 0
    push 1
    native write

    ret
